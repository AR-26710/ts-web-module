var o=Object.defineProperty,e=(e,t,s)=>(((e,t,s)=>{t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s})(e,"symbol"!=typeof t?t+"":t,s),s);const t=class{static async init(){return this.configLoadPromise||(this.configLoadPromise=this.loadConfig().then(()=>{this.configLoaded=!0})),this.configLoadPromise}static async loadConfig(){try{const o=await import("./ts-web-module-config-1.7.12.es.min.js");this.moduleMap=o.moduleMap,this.customElements=o.customElements}catch(o){throw console.error("模块配置加载失败:",o),o}}static getModuleMap(){return this.moduleMap}static getCustomElements(){return this.customElements}static async loadModule(o){if(this.loadedModules.has(o))return;if(this.loadingModules.has(o))return this.loadingModules.get(o);if(!this.configLoaded&&(this.configLoadPromise?await this.configLoadPromise:(await this.init(),this.configLoadPromise&&await this.configLoadPromise),!this.moduleMap))return void console.warn("模块配置加载失败");if(!this.moduleMap)return void console.warn("模块配置尚未加载完成");const e=this.moduleMap[o];if(!e)return void console.warn(`未找到标签 ${o} 对应的模块`);const t=e().then(()=>{this.loadedModules.add(o),this.loadingModules.delete(o),console.log(`模块 ${o} 加载成功`)}).catch(e=>{throw this.loadingModules.delete(o),console.error(`模块 ${o} 加载失败:`,e),e});return this.loadingModules.set(o,t),t}static async scanAndLoad(){if(!this.configLoaded&&(this.configLoadPromise?await this.configLoadPromise:(await this.init(),this.configLoadPromise&&await this.configLoadPromise),!this.customElements))return void console.warn("模块配置加载失败");const o=[];this.customElements&&this.customElements.forEach(e=>{document.getElementsByTagName(e).length>0&&!this.loadedModules.has(e)&&o.push(e)}),o.length>0&&(console.log(`发现 ${o.length} 个需要加载的模块:`,o),await Promise.all(o.map(o=>this.loadModule(o))))}};e(t,"loadedModules",new Set),e(t,"loadingModules",new Map),e(t,"moduleMap",null),e(t,"customElements",null),e(t,"configLoaded",!1),e(t,"configLoadPromise",null),t.init();let s=t;new MutationObserver(o=>{const e=new Set;o.forEach(o=>{o.addedNodes.forEach(o=>{if(o.nodeType===Node.ELEMENT_NODE){const t=o,a=s.getModuleMap(),i=s.getCustomElements();if(!a||!i)return void setTimeout(()=>{const o=s.getModuleMap(),a=s.getCustomElements();if(!o||!a)return void console.warn("模块配置尚未加载完成");const i=t.tagName.toLowerCase();o[i]&&e.add(i),t.querySelectorAll(a.join(",")).forEach(o=>{e.add(o.tagName.toLowerCase())}),e.size>0&&(console.log(`发现 ${e.size} 个新组件:`,Array.from(e)),e.forEach(o=>{s.loadModule(o).catch(console.error)}))},100);const n=t.tagName.toLowerCase();a[n]&&e.add(n),t.querySelectorAll(i.join(",")).forEach(o=>{e.add(o.tagName.toLowerCase())})}})}),e.size>0&&(console.log(`发现 ${e.size} 个新组件:`,Array.from(e)),e.forEach(o=>{s.loadModule(o).catch(console.error)}))}).observe(document.body,{childList:!0,subtree:!0}),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{s.scanAndLoad().catch(console.error)}):s.scanAndLoad().catch(console.error),window.TsWebModule={ModuleLoader:s,loadModule:o=>s.loadModule(o)};
