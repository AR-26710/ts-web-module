var e=Object.defineProperty,t=(t,n,o)=>(((t,n,o)=>{n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[n]=o})(t,"symbol"!=typeof n?n+"":n,o),o);class n extends HTMLElement{constructor(){super(),t(this,"shadow"),t(this,"handleTouch",e=>{e.preventDefault(),this.toggleReveal()}),t(this,"handleKeyDown",e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.toggleReveal())}),this.shadow=this.attachShadow({mode:"open"}),this.render()}static get observedAttributes(){return["color"]}connectedCallback(){this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}attributeChangedCallback(e,t,n){t!==n&&"color"===e&&this.updateOverlayColor()}render(){const e=document.createElement("style");e.textContent="\n      :host {\n        display: inline-block;\n        position: relative;\n        cursor: pointer;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n      }\n\n      .bt-overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: var(--bt-overlay-color, #000);\n        opacity: 0.9;\n        transition: opacity 0.3s ease;\n        pointer-events: none;\n        border-radius: 2px;\n      }\n\n      .bt-overlay.revealed {\n        opacity: 0;\n      }\n\n      .bt-content {\n        position: relative;\n        display: inline-block;\n        transition: filter 0.3s ease;\n      }\n\n      :host(:not(.revealed)) .bt-content {\n        filter: blur(2px);\n      }\n\n      /* 桌面设备优化 */\n      @media (hover: hover) and (pointer: fine) {\n        :host(:hover) .bt-overlay {\n          opacity: 0;\n        }\n        \n        :host(:hover) .bt-content {\n          filter: blur(0);\n        }\n      }\n\n      /* 触摸设备优化 */\n      @media (hover: none) and (pointer: coarse) {\n        :host(.revealed) .bt-overlay {\n          opacity: 0;\n        }\n        \n        :host(.revealed) .bt-content {\n          filter: blur(0);\n        }\n      }\n\n      /* 无障碍支持 */\n      :host(:focus) {\n        outline: 2px solid #007bff;\n        outline-offset: 2px;\n      }\n\n      /* 暗色模式支持 */\n      @media (prefers-color-scheme: dark) {\n        .bt-overlay {\n          opacity: 0.7;\n        }\n      }\n    ";const t=document.createElement("span"),n=document.createElement("div");n.className="bt-overlay";const o=document.createElement("span");o.className="bt-content";const s=document.createElement("slot");o.appendChild(s),t.append(n,o),this.shadow.append(e,t)}setupEventListeners(){this.addEventListener("touchstart",this.handleTouch),this.addEventListener("keydown",this.handleKeyDown),this.setAttribute("tabindex","0"),this.setAttribute("role","button"),this.setAttribute("aria-label","黑幕文字组件，点击或悬停显示内容")}removeEventListeners(){this.removeEventListener("touchstart",this.handleTouch),this.removeEventListener("keydown",this.handleKeyDown)}toggleReveal(){this.classList.contains("revealed")?this.classList.remove("revealed"):this.classList.add("revealed")}updateOverlayColor(){const e=this.getAttribute("color");e?this.style.setProperty("--bt-overlay-color",e):this.style.removeProperty("--bt-overlay-color")}}customElements.define("black-text",n);const o="black-text";export{o as BLACK_TEXT_MODULE};
